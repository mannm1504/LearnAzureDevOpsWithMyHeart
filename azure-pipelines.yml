# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: self-hosted
  Demands:
  - agent.name -equals 'MSI-laptop'

parameters:
  - name: PostgreSQLServer 
    displayName: PostgreSQLServer 
    type: string 
    default: localhost
  - name: PostgreSQLUser 
    displayName: PostgreSQLUser 
    type: string 
    default: postgres
  - name: DatabaseName 
    displayName: DatabaseName 
    type: string 
    default: test-database
  - name: BackupFileName 
    displayName: DatabaseName 
    type: string 
    default: postgres-backup.dump

steps:
- script: |
    docker exec -i postgres_container pg_dump -h ${{ parameters.PostgreSQLServer }} -U ${{ parameters.PostgreSQLUser }} -Ft ${{ parameters.DatabaseName }} -f ${{ parameters.BackupFileName }}
    docker cp postgres_container:/${{ parameters.BackupFileName }} ${{ parameters.BackupFileName }}
  displayName: 'Dumping ${{ parameters.DatabaseName }}'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/${{ parameters.BackupFileName }}
    artifactName: PostgresBackupDatabase

- script: |
    del ${{ parameters.BackupFileName }} 
    docker exec -i postgres_container rm ./${{ parameters.BackupFileName }}
  displayName: 'Delete temp file'